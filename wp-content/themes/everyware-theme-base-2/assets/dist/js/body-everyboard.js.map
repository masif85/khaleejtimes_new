{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/js/body/everyboard/index.js"],"names":[],"mappings":"AAAA;ACAA;;AAEA,CAAC,CAAC,QAAD,CAAD,CAAY,KAAZ,CAAkB,YAAY;AAE1B;AACJ;AACA;AACA;AACA;AACI,MAAM,iBAAiB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAA1B;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,MAAM,UAAU,GAAG,CACf;AAAE;AACE,IAAA,WAAW,EAAE,uBADjB;AAEI,IAAA,WAAW,EAAE,sBAFjB;AAGI,IAAA,SAAS,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB;AAHf,GADe,EAMf;AAAE;AACE,IAAA,WAAW,EAAE,uBADjB;AAEI,IAAA,WAAW,EAAE,IAFjB;AAGI,IAAA,SAAS,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB;AAHf,GANe,EAWf;AAAE;AACE,IAAA,WAAW,EAAE,qBADjB;AAEI,IAAA,WAAW,EAAE,IAFjB;AAGI,IAAA,SAAS,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB;AAHf,GAXe,CAAnB;AAkBA;AACJ;AACA;;AACI,MAAM,2BAA2B,GAAG,IAApC;AAEA;AACJ;AACA;;AACI,MAAI,sBAAsB,GAAG,IAA7B;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,MAAM,kCAAkC,GAAG,SAArC,kCAAqC,CAAU,WAAV,EAAuB;AAE9D,QAAI,sBAAsB,KAAK,IAA/B,EAAqC;AACjC,MAAA,sBAAsB,CAAC,WAAD,EAAc,UAAU,CAAC,sBAAD,CAAxB,CAAtB;AAEA;AACH;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AACxC,UAAM,UAAU,GAAG,sBAAsB,CAAC,WAAD,EAAc,UAAU,CAAC,CAAD,CAAxB,CAAzC;;AACA,UAAI,UAAU,IAAI,2BAAlB,EAA+C;AAC3C,QAAA,sBAAsB,GAAG,CAAzB;AAEA;AACH;AACJ;AACJ,GAhBD;AAkBA;AACJ;AACA;AACA;AACA;;;AACI,MAAM,oBAAoB,GAAG,SAAvB,oBAAuB,CAAU,QAAV,EAAoB;AAC7C,WAAO,WAAW,QAAlB;AACH,GAFD;AAIA;AACJ;AACA;AACA;AACA;;;AACI,MAAM,mBAAmB,GAAG,SAAtB,mBAAsB,CAAU,QAAV,EAAoB;AAC5C,WAAO,UAAU,QAAjB;AACH,GAFD;AAIA;AACJ;AACA;AACA;AACA;AACA;;;AACI,MAAM,sBAAsB,GAAG,SAAzB,sBAAyB,CAAU,WAAV,EAAuB,SAAvB,EAAkC;AAC7D,QAAI,qBAAqB,GAAG,KAA5B;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,SAAV,CAAoB,MAAxC,EAAgD,CAAC,EAAjD,EAAqD;AACjD,UAAM,QAAQ,GAAG,iBAAiB,CAAC,CAAD,CAAlC;AAEA,UAAI,gBAAgB,GAAG,IAAvB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AACzC,YAAM,QAAQ,GAAG,WAAW,CAAC,EAAZ,CAAe,CAAf,CAAjB;;AAEA,YAAI,6BAA6B,CAAC,SAAD,EAAY,QAAZ,EAAsB,CAAtB,CAAjC,EAA2D;AACvD;AACH,SALwC,CAOzC;;;AACA,YAAM,mBAAmB,GAAI,gBAAgB,KAAK,IAAlD;AACA,YAAM,kBAAkB,GAAI,CAAC,KAAK,CAAlC;AACA,QAAA,gBAAgB,GAAG,CAAnB;;AAEA,YAAI,mBAAmB,IAAI,CAAC,kBAA5B,EAAgD;AAC5C,UAAA,QAAQ,CAAC,QAAT,CAAkB,oBAAoB,CAAC,QAAD,CAAtC;AACH;AACJ;;AAED,UAAI,gBAAgB,KAAK,IAAzB,EAA+B;AAC3B,YAAM,iBAAiB,GAAI,gBAAgB,KAAK,WAAW,CAAC,MAAZ,GAAqB,CAArE;;AACA,YAAI,CAAC,iBAAL,EAAwB;AACpB,UAAA,WAAW,CAAC,EAAZ,CAAe,gBAAf,EAAiC,QAAjC,CAA0C,mBAAmB,CAAC,QAAD,CAA7D;AACH;;AACD,QAAA,qBAAqB,GAAG,IAAxB;AACH;AACJ;;AAED,WAAO,qBAAP;AACH,GAlCD;AAoCA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI,MAAM,6BAA6B,GAAG,SAAhC,6BAAgC,CAAU,SAAV,EAAqB,QAArB,EAA+B,WAA/B,EAA4C;AAC9E,QAAI,QAAQ,GAAG,KAAf;AACA,QAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,OAAd,EAAuB,KAAvB,CAA6B,GAA7B,CAAhB,CAF8E,CAI9E;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAI,WAArB,EAAkC,CAAC,EAAnC,EAAuC;AAEnC;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AAErC,YAAM,SAAS,GAAI,SAAS,CAAC,WAAV,KAA0B,IAA3B,GAAmC,IAAnC,GAA0C,SAAS,CAAC,WAAV,CAAsB,IAAtB,CAA2B,OAAO,CAAC,CAAD,CAAlC,CAA5D;AACA,YAAM,SAAS,GAAI,SAAS,CAAC,WAAV,KAA0B,IAA3B,GAAmC,IAAnC,GAA0C,SAAS,CAAC,WAAV,CAAsB,IAAtB,CAA2B,OAAO,CAAC,CAAD,CAAlC,CAA5D;;AAEA,YAAI,oBAAoB,CAAC,SAAD,EAAY,CAAZ,EAAe,SAAS,CAAC,SAAzB,CAAxB,EAA6D;AACzD,UAAA,QAAQ,GAAG,IAAX;AACH,SAFD,MAEO,IAAI,oBAAoB,CAAC,SAAD,EAAY,CAAZ,EAAe,SAAS,CAAC,SAAzB,CAAxB,EAA6D;AAChE,UAAA,QAAQ,GAAG,KAAX;AACH;AACJ;AACJ;;AAED,WAAO,QAAP;AACH,GAtBD;AAwBA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI,MAAM,oBAAoB,GAAG,SAAvB,oBAAuB,CAAU,KAAV,EAAiB,WAAjB,EAA8B,UAA9B,EAA0C;AACnE,QAAI,KAAK,KAAK,IAAd,EAAoB;AAChB,aAAO,KAAP;AACH;;AACD,QAAM,gBAAgB,GAAI,OAAO,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAArB,GAAiC,KAAK,CAAC,CAAD,CAAtC,GAA4C,KAArE;AACA,QAAM,gBAAgB,GAAI,WAAW,KAAK,CAA1C;AACA,WAAQ,gBAAgB,KAAK,UAAU,CAAC,WAAD,CAA/B,IAAiD,gBAAgB,KAAK,KAArB,IAA8B,gBAAvF;AACH,GAPD,CA1K0B,CAmL1B;;;AACA,EAAA,CAAC,CAAC,cAAD,CAAD,CAAkB,IAAlB,CAAuB,YAAY;AAE/B,QAAM,KAAK,GAAG,CAAC,CAAC,IAAD,CAAD,CAAQ,QAAR,EAAd;AACA,IAAA,kCAAkC,CAAC,KAAD,CAAlC;AAEA,IAAA,KAAK,CAAC,IAAN,CAAW,YAAY;AACnB,UAAM,KAAK,GAAG,CAAC,CAAC,IAAD,CAAD,CAAQ,QAAR,EAAd;AACA,MAAA,kCAAkC,CAAC,KAAD,CAAlC;AAEA,MAAA,KAAK,CAAC,IAAN,CAAW,YAAY;AACnB,YAAM,MAAM,GAAG,CAAC,CAAC,IAAD,CAAD,CAAQ,QAAR,EAAf;AACA,QAAA,kCAAkC,CAAC,MAAD,CAAlC;AACH,OAHD;AAKH,KATD;AAWH,GAhBD;AAkBH,CAtMD","file":"body-everyboard.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\n\n$(document).ready(function () {\n\n    /**\n     * Device size names used by Everyboard to formulate class names.\n     *\n     * @type {string[]}\n     */\n    const everyboardDevices = ['xs', 'sm', 'md', 'lg'];\n\n    /**\n     * Supported frameworks and patterns to the classes Everyboard uses to hide/show elements on different devices.\n     *\n     * If a pattern is specific to a device, it should be captured by the first parenthesis.\n     * Else it will be assumed to be a device-independent class.\n     *\n     * The devices in `deviceMap` correspond to the four devices in `everyboardDevices`.\n     */\n    const frameworks = [\n        { // Bootstrap4\n            hidePattern: /^d-([a-z]{2})?-?none$/,\n            showPattern: /^d-([a-z]{2})-[a-z]+/,\n            deviceMap: ['sm', 'md', 'lg', 'xl']\n        },\n        { // Suit\n            hidePattern: /^u-([a-z]{2})-hidden$/,\n            showPattern: null,\n            deviceMap: ['sm', 'md', 'lg', 'xl']\n        },\n        { // Legacy\n            hidePattern: /^hidden-([a-z]{2})$/,\n            showPattern: null,\n            deviceMap: ['xs', 'sm', 'md', 'lg']\n        }\n    ];\n\n    /**\n     * @type {boolean} Setting TRUE optimizes so that only the patterns of the first detected framework will be tried.\n     */\n    const onlyOneFrameworkCanBeActive = true;\n\n    /**\n     * @type {number|null}\n     */\n    let detectedFrameworkIndex = null;\n\n    /**\n     * Add CSS classes to make it clear which elements in a collection that will be\n     * the first and last VISIBLE ones, when viewed on a certain device.\n     *\n     * Classes are only added when something in $collection has been hidden, i.e.\n     * when :first-child and :last-child will not be enough to select the elements.\n     *\n     * @param {jQuery} $collection\n     */\n    const classifyFirstAndLastVisibleElement = function ($collection) {\n\n        if (detectedFrameworkIndex !== null) {\n            classifyUsingFramework($collection, frameworks[detectedFrameworkIndex]);\n\n            return;\n        }\n\n        for (let i = 0; i < frameworks.length; i++) {\n            const hasMatches = classifyUsingFramework($collection, frameworks[i]);\n            if (hasMatches && onlyOneFrameworkCanBeActive) {\n                detectedFrameworkIndex = i;\n\n                return;\n            }\n        }\n    };\n\n    /**\n     * @param {string} ebDevice\n     *\n     * @returns {string}\n     */\n    const getFirstVisibleClass = function (ebDevice) {\n        return 'first-' + ebDevice;\n    };\n\n    /**\n     * @param {string} ebDevice\n     *\n     * @returns {string}\n     */\n    const getLastVisibleClass = function (ebDevice) {\n        return 'last-' + ebDevice;\n    };\n\n    /**\n     * @param {jQuery} $collection\n     * @param {object} framework\n     *\n     * @returns {boolean}  TRUE if found any matches on this framework, else FALSE\n     */\n    const classifyUsingFramework = function ($collection, framework) {\n        let foundMatchInFramework = false;\n\n        for (let i = 0; i < framework.deviceMap.length; i++) {\n            const ebDevice = everyboardDevices[i];\n\n            let lastVisibleIndex = null;\n            for (let j = 0; j < $collection.length; j++) {\n                const $element = $collection.eq(j);\n\n                if (frameworkHidesElementOnDevice(framework, $element, i)) {\n                    continue;\n                }\n\n                // This element is visible on this device!\n                const firstVisibleElement = (lastVisibleIndex === null);\n                const firstElementAnyway = (j === 0);\n                lastVisibleIndex = j;\n\n                if (firstVisibleElement && !firstElementAnyway) {\n                    $element.addClass(getFirstVisibleClass(ebDevice));\n                }\n            }\n\n            if (lastVisibleIndex !== null) {\n                const lastElementAnyway = (lastVisibleIndex === $collection.length - 1);\n                if (!lastElementAnyway) {\n                    $collection.eq(lastVisibleIndex).addClass(getLastVisibleClass(ebDevice));\n                }\n                foundMatchInFramework = true;\n            }\n        }\n\n        return foundMatchInFramework;\n    }\n\n    /**\n     * @param {object} framework\n     * @param {jQuery} $element\n     * @param {number} deviceIndex\n     *\n     * @returns {boolean}\n     */\n    const frameworkHidesElementOnDevice = function (framework, $element, deviceIndex) {\n        let isHidden = false;\n        const classes = $element.attr('class').split(' ');\n\n        // From smallest device to largest...\n        for (let i = 0; i <= deviceIndex; i++) {\n\n            // Check each class in the order they are mentioned...\n            for (let j = 0; j < classes.length; j++) {\n\n                const hideMatch = (framework.hidePattern === null) ? null : framework.hidePattern.exec(classes[j]);\n                const showMatch = (framework.showPattern === null) ? null : framework.showPattern.exec(classes[j]);\n\n                if (matchAppliesToDevice(hideMatch, i, framework.deviceMap)) {\n                    isHidden = true;\n                } else if (matchAppliesToDevice(showMatch, i, framework.deviceMap)) {\n                    isHidden = false;\n                }\n            }\n        }\n\n        return isHidden;\n    };\n\n    /**\n     * @param {object|null} match       Result from RegExp.prototype.exec()\n     * @param {number}      deviceIndex\n     * @param {string[]}    deviceList  In order from smallest to largest\n     *\n     * @returns {boolean}\n     */\n    const matchAppliesToDevice = function (match, deviceIndex, deviceList) {\n        if (match === null) {\n            return false;\n        }\n        const specificToDevice = (typeof match[1] === \"string\") ? match[1] : false;\n        const isSmallestDevice = (deviceIndex === 0);\n        return (specificToDevice === deviceList[deviceIndex] || (specificToDevice === false && isSmallestDevice));\n    };\n\n    // Classify all rows, columns and items in Everyboards.\n    $('.every_board').each(function () {\n\n        const $rows = $(this).children();\n        classifyFirstAndLastVisibleElement($rows);\n\n        $rows.each(function () {\n            const $cols = $(this).children();\n            classifyFirstAndLastVisibleElement($cols);\n\n            $cols.each(function () {\n                const $items = $(this).children();\n                classifyFirstAndLastVisibleElement($items);\n            });\n\n        });\n\n    });\n\n});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}