jQuery(document).ready((function(){const e=function(e){return jQuery("input, select, textarea").filter('[name$="['+e+']"]')},t=function(e){let t=null;return e.each((function(e,n){n.checked&&(t=n.value)})),t},n=function(e,t){let n=oc_ajax.oc_ajax_url||"";t.empty().append('<i class="fa fa-spinner fa-spin fa-2x fa-fw"></i>').addClass("oc-test-result--loaded"),jQuery.post(n,e,null,"json").done((function(e){let n,s='<span class="icon icon--ok dashicons dashicons-yes dashicons-yes-alt"></span>',a='<span class="icon icon--warning dashicons dashicons-warning"></span>',o='<span class="icon icon--error dashicons dashicons-warning"></span>',r=e.responseSubject,c=e.response;switch(e.responseType){case"OK":n=s;break;case"WARNING":n=a;break;case"ERROR":n=o;break;default:n=o,r="Unknown response type"}let i="<p><strong>"+n+r+":</strong> "+c+"</p>";t.empty().append(i)}))};jQuery('<button type="button" class="button button-small hide-if-no-js js-copy-permalink">Copy URL</button>').appendTo("#edit-slug-buttons").before(" "),jQuery(document).on("click",".js-copy-permalink",(function(e){e.preventDefault(),function(e){let t=jQuery("<input>");jQuery("body").append(t),t.val(jQuery(e).text()).select(),document.execCommand("copy"),t.remove()}("#sample-permalink")}));let s=e("link_type");const a=function(){let n="page"===t(s);e("link_page").attr("disabled",!n).attr("required",n),e("link_url").attr("disabled",n).attr("required",!n)};s.change(a);let o=e("feed_source");const r=function(){let n="list"===t(o);jQuery(".js-feed_source_type_list").toggle(n),jQuery(".js-feed_source_type_query").toggle(!n),e("feed_source_list").attr("required",n),e("feed_source_query").attr("required",!n),e("feed_source_query_sorting").attr("required",!n)};o.change(r);let c=e("has_image");const i=function(){let t=c.attr("checked");e("image_width").attr("disabled",!t)};c.change(i);e("feed_source_list").change((function(e){let t=jQuery(e.target).closest(".js-feed_source_type_list"),s={action:"validate_oc_list",uuid:t.find(".js-oc-list").val()},a=t.find(".js-oc-test-result");n(s,a)}));jQuery(".js-oc-query-test").click((function(e){e.preventDefault();let t=jQuery(e.target).closest(".js-feed_source_type_query"),s={action:"validate_oc_query",query:t.find(".js-oc-query").val(),start:t.find(".js-oc-query-start").val(),limit:t.find(".js-oc-query-limit").val()},a=t.find(".js-oc-test-result");n(s,a)})),a(),r(),i()}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
